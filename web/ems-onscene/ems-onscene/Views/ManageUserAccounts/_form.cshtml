@model ems_onscene.Models.EntityModels.AspNetUser
<div class="row ">
    @Html.LabelFor(model => model.MemberName, "Member Name", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-3">
        @Html.EditorFor(model => model.MemberName, new { htmlAttributes = new { @class = "form-control", datatype="System.String" } })
        @Html.ValidationMessageFor(model => model.MemberName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="row">
    @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-3">
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", datatype="System.String" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.EmailConfirmed, "Email Confirmed", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-3">
        <div class="checkbox">
            @Html.EditorFor(model => model.EmailConfirmed)
            @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
        </div>
    </div>
</div>



<div class="row">
    @Html.LabelFor(model => model.UserName, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-3">
        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", datatype="System.String" } })
        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.MedicalRank, "Medical Rank", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-3">
        @*@Html.Partial("_inputwithgridsearch", new ViewDataDictionary() {
        { "fieldname", "MedicalRank" }
        , { "displayfieldname", "MedicalRank"}
        , { "fieldnametopick", "MedicalRank" }
        , { "displayfieldnametopick", "MedicalRank" }
        , { "value", Model.MedicalRank }
        , { "displayvalue", Model.EMSRole == null?string.Empty:Model.EMSRole.MedicalRank }
        , { "searchfields", "MedicalRank" }
        , { "searchfieldnames", "MedicalRank" }
        , { "odatasourceurl", "/odata/EMSRoles?$select=MedicalRank,MedicalRank" }
        , { "gridcolumns", "[{\"field\":\"MedicalRank\", \"title\":\"MedicalRank\"}, {\"field\":\"MedicalRank\", \"title\":\"MedicalRank\"} ]" }
        , {"pagesize", "6" }
        , { "required", "required" }
		, { "positioncontrol", "fixed" }
    })*@
        @Html.DropDownList("MedicalRank", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.MedicalRank, "", new { @class = "text-danger" })
    </div>
</div>


<div class="row">
    @Html.LabelFor(model => model.Approved, "Approved", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-3">
        <div class="checkbox">
            @Html.EditorFor(model => model.Approved)
            @Html.ValidationMessageFor(model => model.Approved, "", new { @class = "text-danger" })
        </div>
    </div>
	</div>
<div class="hide">
    @Html.LabelFor(model => model.Id, "Id", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-3">
        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", datatype = "System.String" } })
        @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
    </div>
    <div class="row">
        @Html.LabelFor(model => model.PasswordHash, "Password Hash", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control", datatype = "System.String" } })
            @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.SecurityStamp, "Security Stamp", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control", datatype = "System.String" } })
            @Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.PhoneNumber, "Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", datatype = "System.String" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.PhoneNumberConfirmed, "Phone Number Confirmed", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <div class="checkbox">
                @Html.EditorFor(model => model.PhoneNumberConfirmed)
                @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        @Html.LabelFor(model => model.TwoFactorEnabled, "Two Factor Enabled", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <div class="checkbox">
                @Html.EditorFor(model => model.TwoFactorEnabled)
                @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.LabelFor(model => model.LockoutEndDateUtc, "Lockout End Date Utc", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "kendodatepickerauto", datatype = "System.DateTime" } })
            @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        @Html.LabelFor(model => model.LockoutEnabled, "Lockout Enabled", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <div class="checkbox">
                @Html.EditorFor(model => model.LockoutEnabled)
                @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.LabelFor(model => model.AccessFailedCount, "Access Failed Count", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control", datatype = "System.Int32" } })
            @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.IsCheckedIn, "Is Checked In", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsCheckedIn)
                @Html.ValidationMessageFor(model => model.IsCheckedIn, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.LabelFor(model => model.CheckedInDT, "Checked In D T", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.CheckedInDT, new { htmlAttributes = new { @class = "kendodatepickerauto", datatype = "System.DateTime" } })
            @Html.ValidationMessageFor(model => model.CheckedInDT, "", new { @class = "text-danger" })
        </div>
    </div>
    <input type="hidden" name="pageid" value="@Request["pageid"]" />
</div>
@Html.Partial("_formexecutionresultmessage")
